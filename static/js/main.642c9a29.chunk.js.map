{"version":3,"sources":["components/header/Header.js","components/navBar/NavBar.js","features/setData/dataSlice.js","components/main/Main.js","features/setData/getInitText.js","components/countdown/Countdown.js","components/popupWithNote/PopupWithNote.js","components/timer/Timer.js","sounds/ring.mp3","components/book/Book.js","components/about/About.js","components/guide/Guide.js","sounds/applause.mp3","components/results/Results.js","components/countWords/CountWords.js","components/feedback/Feedback.js","components/footer/Footer.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Header","className","NavBar","routes","types","useState","active","setActive","renderLinks","map","type","to","indexOf","onClick","dataSlice","createSlice","name","initialState","text","user","index","reducers","saveText","state","action","payload","saveUser","saveIndex","actions","Main","dispatch","useDispatch","useSelector","setData","optionValue","setOptionValue","inputValue","setInputValue","isInteractive","htmlFor","id","defaultValue","onChange","e","target","value","maxLength","style","pointerEvents","userLevel","max","textBlocks","data","JSON","stringify","length","Math","floor","random","getInitText","Countdown","navigate","useNavigate","num","setNum","intervalRef","useRef","decreaseNum","prev","useEffect","current","setInterval","clearInterval","PopupWithNote","isOpen","isClosed","children","alt","sounds","ring","Timer","modalVisibleState","setModalVisibleState","isActive","setIsActive","filename","audio","Audio","src","playPromise","play","undefined","then","console","log","catch","error","playSound","Book","onSelect","selectionStart","readOnly","About","Guide","Results","getTotal","cut","slice","replace","regExp","match","countWords","applause","Feedback","fontWeight","href","Footer","App","path","element","store","configureStore","reducer","setDataReducer","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.642c9a29.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <section className=\"header\">\r\n      <div className=\"header__logo\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n  const routes = [\"/\", \"/about\", \"/guide\", \"/feedback\"];\r\n  const types = [\"Главная\", \"О проекте\", \"Инструкция\", \"Обратная связь\"];\r\n  const [active, setActive] = useState(\"Главная\");\r\n  const renderLinks = types.map((type) => (\r\n    <Link\r\n      key={type}\r\n      to={routes[types.indexOf(type)]}\r\n      onClick={() => setActive(type)}\r\n      className={`button button__navBar ${active === type ? \"button_idle\" : \"\"}`}\r\n    >\r\n      {type}\r\n    </Link>\r\n  ));\r\n\r\n  return (\r\n    <section className=\"navBar\">\r\n      {renderLinks}\r\n    </section>\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  text: \"\",\r\n  user: \"\",\r\n  index: 0,\r\n};\r\n\r\nconst dataSlice = createSlice({\r\n  name: \"setData\",\r\n  initialState,\r\n  reducers: {\r\n    saveText: (state, action) => {\r\n      state.text = action.payload;\r\n    },\r\n    saveUser: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    saveIndex: (state, action) => {\r\n      state.index = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { saveText, saveUser, saveIndex } = dataSlice.actions;\r\n\r\nexport default dataSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getInitText } from \"../../features/setData/getInitText\";\r\nimport { saveText, saveUser } from \"../../features/setData/dataSlice\";\r\n\r\nexport const Main = () => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.setData);\r\n  const [optionValue, setOptionValue] = useState(\"\");\r\n  const [inputValue, setInputValue] = useState(user);\r\n  const onOptionChanged = (e) => setOptionValue(e.target.value);\r\n  const onInputChanged = (e) => setInputValue(e.target.value);\r\n  const onButtonClicked = () => {\r\n    dispatch(saveText(getInitText(optionValue)));\r\n    dispatch(saveUser(inputValue));\r\n  };\r\n  const isInteractive = optionValue === \"\" || inputValue === \"\" ? \"none\" : \"all\";\r\n\r\n  return (\r\n    <section className={\"main\"}>\r\n      <div className=\"main__option\">\r\n        <nav className=\"main__nav\">\r\n          <label htmlFor=\"nameInput\" className=\"main__text\">\r\n            Введите имя:\r\n          </label>\r\n          <input type=\"text\" id=\"nameInput\" className=\"main__input\" defaultValue={inputValue} onChange={onInputChanged} maxLength=\"30\"/>\r\n        </nav>\r\n        <nav className=\"main__nav\">\r\n          <label htmlFor=\"selectLevel\" className=\"main__text\">\r\n            Сложность:\r\n          </label>\r\n          <select className=\"main__input\" id=\"selectLevel\" onChange={onOptionChanged}>\r\n            <option value=\"\"></option>\r\n            <option key={0} value=\"beginner\">\r\n              дети 7-13 лет\r\n            </option>\r\n            <option key={1} value=\"advanced\">\r\n              остальные читатели\r\n            </option>\r\n          </select>\r\n        </nav>\r\n        <Link\r\n          className={`button button__main ${isInteractive === \"none\" ? \"button_idle\" : \"\"}`}\r\n          style={{ pointerEvents: isInteractive }}\r\n          to=\"countdown\"\r\n          onClick={onButtonClicked}>\r\n          Начать\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import data from \"../../app/initTexts.json\";\r\n\r\nexport const getInitText = (userLevel) => {\r\n  const getRandomInt = (max) => Math.floor(Math.random() * max);\r\n  const textBlocks = data[0][userLevel];\r\n  const textBlock = JSON.stringify(textBlocks[getRandomInt(textBlocks.length)]);\r\n  return textBlock;\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const Countdown = () => {\r\n  let navigate = useNavigate();\r\n  const [num, setNum] = useState(3);\r\n  const intervalRef = useRef();\r\n  const decreaseNum = () => setNum((prev) => prev - 1);\r\n\r\n  useEffect(() => {\r\n    intervalRef.current = setInterval(decreaseNum, 1000);\r\n\r\n    if (num < 1) {\r\n      navigate(\"/book\");\r\n      clearInterval(intervalRef.current);\r\n    }\r\n\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [num, navigate]);\r\n\r\n  return (\r\n    <section className={\"main\"}>\r\n      <h2 className=\"main__count\">{num}</h2>\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const PopupWithNote = ({ isOpen, isClosed, children }) => {\r\n  return (\r\n    <>\r\n      <div className={`popup ${isOpen ? \"popup_opened\" : \"\"}`}>\r\n        <form className=\"popup__container\" name=\"cardDeleteForm\" action=\"#\">\r\n          <div className=\"popup__window\">\r\n            <button className=\"popup__close-button\" type=\"button\" name=\"closePopup\" onClick={isClosed} />\r\n            <h1 className=\"about__title\">Время истекло!</h1>\r\n            <div className=\"popup__image\" alt=\"Будильник звенит\"></div>\r\n            <h2 className=\"about__title\">А сейчас:</h2>\r\n            <ul className=\"guide__list\">\r\n              <li className=\"about__text\">Нажми кнопку далее.</li>\r\n              <li className=\"about__text\">Выдели последнее прочитанное слово в тексте.</li>\r\n              <li className=\"about__text\">Нажми на кнопку \"Подсчитать\" в меню наверху страницы.</li>\r\n            </ul>\r\n            <button className=\"button button__main\" type=\"button\" onClick={isClosed}>\r\n              Далее...\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { PopupWithNote } from \"../popupWithNote/PopupWithNote\";\r\nimport ring from \"../../sounds/ring.mp3\";\r\n\r\nconst sounds = {\r\n  ring\r\n};\r\n\r\nexport const Timer = () => {\r\n  const [num, setNum] = useState(59);\r\n  const [modalVisibleState, setModalVisibleState] = useState(false);\r\n  const [isActive, setIsActive] = useState(\"\");\r\n  const isInteractive = isActive === \"\" ? \"none\" : \"all\";\r\n  const modalClose = () => setModalVisibleState(false);\r\n  const intervalRef = useRef();\r\n  const decreaseNum = () => setNum((prev) => prev - 1);\r\n  const playSound = (filename) => {\r\n    const audio = new Audio();\r\n    audio.src = sounds[filename];\r\n    const playPromise = audio.play();\r\n\r\n    if (playPromise !== undefined) {\r\n      playPromise\r\n        .then(() => {\r\n          console.log(\"audio played auto\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(`playback prevented, reason: ${error}`);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    intervalRef.current = setInterval(decreaseNum, 1000);\r\n\r\n    if (num < 1) {\r\n      playSound(\"ring\");\r\n      setIsActive(true);\r\n      setModalVisibleState(true);\r\n      clearInterval(intervalRef.current);\r\n    }\r\n\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [num]);\r\n\r\n  return (\r\n    <>\r\n      <section className={\"timer\"}>\r\n        <div className=\"timer__area\">\r\n          <p className=\"timer__block\">\r\n            Таймер&nbsp;00:{num < 10 ? `0${num}` : num}\r\n          </p>\r\n        </div>\r\n        <Link\r\n          className={`button button__navBar ${\r\n            isInteractive === \"none\" ? \"button_idle\" : \"button_active\"\r\n          }`}\r\n          style={{ pointerEvents: isInteractive }}\r\n          to=\"/results\"\r\n        >\r\n          Подсчитать\r\n        </Link>\r\n        <PopupWithNote isOpen={modalVisibleState} isClosed={modalClose} />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/ring.6d96270d.mp3\";","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { saveIndex } from \"../../features/setData/dataSlice\";\r\nimport { Timer } from \"../timer/Timer\";\r\n\r\nexport const Book = () => {\r\n  const { text } = useSelector((state) => state.setData);\r\n  const dispatch = useDispatch();\r\n  const onSelect = (e) => {\r\n    dispatch(saveIndex(e.target.selectionStart));\r\n  };\r\n\r\n  return (\r\n    <section className={\"book\"}>\r\n      <Timer />\r\n      <textarea\r\n        className=\"book__textArea\"\r\n        value={text}\r\n        maxLength={450}\r\n        onSelect={onSelect}\r\n        readOnly\r\n      />\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <section className=\"about\">\r\n      <h1 className=\"about__title\">Привет!</h1>\r\n      <p className=\"about__text\">\r\n        Ты на странице проекта, который помогает быстро подсчитать количество прочитанных слов за 1 минуту.\r\n      </p>\r\n      <p className=\"about__text\">\r\n        Весь функционал доступен бесплатно для использования и предоставляется автором в образовательных целях.\r\n      </p>\r\n      <p className=\"about__text\">\r\n        Веб сайт полностью адаптивен к мобильным устройствам и позволяет комфортно посещать его с разных устройств.\r\n      </p>\r\n      <p className=\"about__text\">Надеюсь данное приложение окажется для тебя полезным!</p>\r\n      <Link className=\"button button__about\" to=\"/\">\r\n        &#8592; На главную\r\n      </Link>\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nexport const Guide = () => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <section className=\"guide\">\r\n      <h1 className=\"about__title\">Инструкция по использованию:</h1>\r\n      <ul className=\"guide__list\">\r\n        <li className=\"about__text\">Укажите свое имя</li>\r\n        <li className=\"about__text\">Выбери подходящий уровень сложности</li>\r\n        <li className=\"about__text\">\r\n          По истечении одной минуты выдели последнее прочитанное слово в тексте.\r\n        </li>\r\n        <li className=\"about__text\">\r\n        Нажми на кнопку \"Подсчитать\" в меню наверху страницы.\r\n        </li>\r\n      </ul>\r\n      <div className=\"guide__actions\">\r\n      <Link className=\"button button__about\" to=\"/\" >\r\n        &#8592; На главную\r\n      </Link>\r\n      <button className=\"button button__guide\" onClick={() => navigate(-1)}>\r\n        Назад\r\n      </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/applause.c0f90f6e.mp3\";","import React, {useEffect} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { countWords } from \"../countWords/CountWords\";\r\nimport { Link } from \"react-router-dom\";\r\nimport applause from \"../../sounds/applause.mp3\";\r\n\r\nexport const Results = () => {\r\n  const { text, index, user } = useSelector((state) => state.setData);\r\n  const getTotal = countWords(index, text);\r\n\r\n  useEffect(()=>{\r\n    const audio= new Audio();\r\n    audio.src = applause;\r\n    audio.play();\r\n  })\r\n\r\n  return (\r\n    <section className=\"results\">\r\n      <h1 className=\"results__title\">{user},</h1>\r\n      <h2 className=\"results__title\">твой результат: <span className=\"results__text\">{getTotal}</span></h2>\r\n      <div className=\"guide__actions\">\r\n        <Link className=\"button button__about\" to=\"/\">\r\n          &#8592; На главную\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","export const countWords = (index, text) => {\r\n  const cut = text.slice(0, index).replace(/\\.?,?:?-?;?/g, \"\");\r\n  const regExp = /([а-я]+|[0-9]+|[a-z]+)\\s/gi;\r\n  if (cut.match(regExp) !== null) {\r\n    return cut.match(regExp).length + 1;\r\n  } else {\r\n    return 1;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Feedback = () => {\r\n  return (\r\n    <section className=\"guide\">\r\n      <h1 className=\"about__title\">Обратная связь:</h1>\r\n      <p className=\"about__text\">\r\n        Если хочешь оставить отзыв о работе приложения в целом, об отдельных\r\n        функциях или у тебя есть предложение как его улучшить, напиши мне об\r\n        этом.\r\n      </p>\r\n      <p className=\"about__text\">\r\n        <span style={{ fontWeight: 600 }}>email:</span>{\" \"}\r\n        <a href=\"mailto:larikov@bk.ru\">larikov@bk.ru</a>\r\n      </p>\r\n      <Link className=\"button button__about\" to=\"/\">\r\n        &#8592; На главную\r\n      </Link>\r\n    </section>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <section className=\"footer\">\r\n      <span className=\"footer__caption\">Автор и разработчик:</span> Андрей Лариков &copy;2021\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Header from \"./components/header/Header\";\r\nimport { NavBar } from \"./components/navBar/NavBar\";\r\nimport { Main } from \"./components/main/Main\";\r\nimport { Countdown } from \"./components/countdown/Countdown\";\r\nimport { Book } from \"./components/book/Book\";\r\nimport { About } from \"./components/about/About\";\r\nimport { Guide } from \"./components/guide/Guide\";\r\nimport { Results } from \"./components/results/Results\";\r\nimport { Feedback } from \"./components/feedback/Feedback\";\r\nimport Footer from \"./components/footer/Footer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"page\">\r\n      <Header />\r\n      <NavBar />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Main />} />\r\n        <Route path=\"countdown\" element={<Countdown />} />\r\n        <Route path=\"book\" element={<Book />} />\r\n        <Route path=\"about\" element={<About />} />\r\n        <Route path=\"guide\" element={<Guide />} />\r\n        <Route path=\"results\" element={<Results />} />\r\n        <Route path=\"feedback\" element={<Feedback />} />\r\n        <Route path=\"/*\" element={<Main />} />\r\n      </Routes>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport setDataReducer from \"../features/setData/dataSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    setData: setDataReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}